{
  "version": 3,
  "sources": ["../src/runtimeHelper.ts", "../src/ast.ts", "../../shared/src/patchFlags.ts", "../../shared/src/regexp.ts", "../src/parse.ts", "../src/transform.ts", "../src/compile.ts"],
  "sourcesContent": ["export const TO_DISPLAY_STRING = Symbol(\"TO_DISPLAY_STRING\");\r\nexport const CREATE_ELEMENT_VNODE = Symbol(\"CREATE_ELEMENT_VNODE\");\r\nexport const CREATE_TEXT_VNODE = Symbol(\"CREATE_TEXT_VNODE\");\r\nexport const CREATE_COMMENT = Symbol(\"CREATE_COMMENT\");\r\nexport const CREATE_COMMENT_VNODE = Symbol(\"CREATE_COMMENT_VNODE\");\r\nexport const Fragment = Symbol(\"Fragment\");\r\nexport const OPEN_BLOCK = Symbol(\"OPEN_BLOCK\");\r\nexport const CREATE_ELEMENT_BLOCK = Symbol(\"CREATE_ELEMENT_BLOCK\");\r\n\r\nexport const helperMapName = {\r\n  [TO_DISPLAY_STRING]: \"toDisplayString\",\r\n  [CREATE_ELEMENT_VNODE]: \"createElementVNode\",\r\n  [CREATE_TEXT_VNODE]: \"createTextVNode\",\r\n  [CREATE_COMMENT]: \"createCommentVNode\",\r\n  [CREATE_COMMENT_VNODE]: \"createCommentVNode\",\r\n  [Fragment]: \"Fragment\",\r\n  [OPEN_BLOCK]: \"openBlock\",\r\n  [CREATE_ELEMENT_BLOCK]: \"createElementBlock\",\r\n};\r\n", "import {\r\n  CREATE_ELEMENT_VNODE,\r\n  CREATE_TEXT_VNODE,\r\n  helperMapName,\r\n  Fragment,\r\n} from \"./runtimeHelper\";\r\n\r\nexport const NodeTypes = {\r\n  ROOT: 0,\r\n  \"0\": \"ROOT\",\r\n  ELEMENT: 1,\r\n  \"1\": \"ELEMENT\",\r\n  TEXT: 2,\r\n  \"2\": \"TEXT\",\r\n  COMMENT: 3,\r\n  \"3\": \"COMMENT\",\r\n  SIMPLE_EXPRESSION: 4,\r\n  \"4\": \"SIMPLE_EXPRESSION\",\r\n  INTERPOLATION: 5,\r\n  \"5\": \"INTERPOLATION\",\r\n  ATTRIBUTE: 6,\r\n  \"6\": \"ATTRIBUTE\",\r\n  DIRECTIVE: 7,\r\n  \"7\": \"DIRECTIVE\",\r\n  COMPOUND_EXPRESSION: 8,\r\n  \"8\": \"COMPOUND_EXPRESSION\",\r\n  IF: 9,\r\n  \"9\": \"IF\",\r\n  IF_BRANCH: 10,\r\n  \"10\": \"IF_BRANCH\",\r\n  FOR: 11,\r\n  \"11\": \"FOR\",\r\n  TEXT_CALL: 12,\r\n  \"12\": \"TEXT_CALL\",\r\n  VNODE_CALL: 13,\r\n  \"13\": \"VNODE_CALL\",\r\n  JS_CALL_EXPRESSION: 14,\r\n  \"14\": \"JS_CALL_EXPRESSION\",\r\n  JS_OBJECT_EXPRESSION: 15,\r\n  \"15\": \"JS_OBJECT_EXPRESSION\",\r\n  JS_PROPERTY: 16,\r\n  \"16\": \"JS_PROPERTY\",\r\n  JS_ARRAY_EXPRESSION: 17,\r\n  \"17\": \"JS_ARRAY_EXPRESSION\",\r\n  JS_FUNCTION_EXPRESSION: 18,\r\n  \"18\": \"JS_FUNCTION_EXPRESSION\",\r\n  JS_CONDITIONAL_EXPRESSION: 19,\r\n  \"19\": \"JS_CONDITIONAL_EXPRESSION\",\r\n  JS_CACHE_EXPRESSION: 20,\r\n  \"20\": \"JS_CACHE_EXPRESSION\",\r\n  JS_BLOCK_STATEMENT: 21,\r\n  \"21\": \"JS_BLOCK_STATEMENT\",\r\n  JS_TEMPLATE_LITERAL: 22,\r\n  \"22\": \"JS_TEMPLATE_LITERAL\",\r\n  JS_IF_STATEMENT: 23,\r\n  \"23\": \"JS_IF_STATEMENT\",\r\n  JS_ASSIGNMENT_EXPRESSION: 24,\r\n  \"24\": \"JS_ASSIGNMENT_EXPRESSION\",\r\n  JS_SEQUENCE_EXPRESSION: 25,\r\n  \"25\": \"JS_SEQUENCE_EXPRESSION\",\r\n  JS_RETURN_STATEMENT: 26,\r\n  \"26\": \"JS_RETURN_STATEMENT\",\r\n};\r\n\r\nexport function createCallExpression(context, args = []) {\r\n  context.helpers.set(CREATE_TEXT_VNODE);\r\n\r\n  return {\r\n    type: NodeTypes.JS_CALL_EXPRESSION,\r\n    callee: helperMapName[CREATE_TEXT_VNODE],\r\n    arguments: args,\r\n  };\r\n}\r\n\r\nexport function createVnodeCall(context, tag, props, children) {\r\n  let key;\r\n\r\n  if (tag !== Fragment) {\r\n    key = context.helper(CREATE_ELEMENT_VNODE);\r\n  }\r\n  return {\r\n    type: NodeTypes.VNODE_CALL,\r\n    callee: key,\r\n    tag,\r\n    props,\r\n    children,\r\n  };\r\n}\r\n\r\nexport function createObjExpression(context, args = []) {\r\n  return {\r\n    type: NodeTypes.JS_OBJECT_EXPRESSION,\r\n    properties: args,\r\n  };\r\n}\r\n", "export const PatchFlags = {\r\n  TEXT: 1,\r\n  \"1\": \"TEXT\",\r\n  CLASS: 2,\r\n  \"2\": \"CLASS\",\r\n  STYLE: 4,\r\n  \"4\": \"STYLE\",\r\n  PROPS: 8,\r\n  \"8\": \"PROPS\",\r\n  FULL_PROPS: 16,\r\n  \"16\": \"FULL_PROPS\",\r\n  NEED_HYDRATION: 32,\r\n  \"32\": \"NEED_HYDRATION\",\r\n  STABLE_FRAGMENT: 64,\r\n  \"64\": \"STABLE_FRAGMENT\",\r\n  KEYED_FRAGMENT: 128,\r\n  \"128\": \"KEYED_FRAGMENT\",\r\n  UNKEYED_FRAGMENT: 256,\r\n  \"256\": \"UNKEYED_FRAGMENT\",\r\n  NEED_PATCH: 512,\r\n  \"512\": \"NEED_PATCH\",\r\n  DYNAMIC_SLOTS: 1024,\r\n  \"1024\": \"DYNAMIC_SLOTS\",\r\n  DEV_ROOT_FRAGMENT: 2048,\r\n  \"2048\": \"DEV_ROOT_FRAGMENT\",\r\n  CACHED: -1,\r\n  \"-1\": \"CACHED\",\r\n  BAIL: -2,\r\n  \"-2\": \"BAIL\",\r\n};\r\nexport const PatchFlagNames = {\r\n  [1]: `TEXT`,\r\n  [2]: `CLASS`,\r\n  [4]: `STYLE`,\r\n  [8]: `PROPS`,\r\n  [16]: `FULL_PROPS`,\r\n  [32]: `NEED_HYDRATION`,\r\n  [64]: `STABLE_FRAGMENT`,\r\n  [128]: `KEYED_FRAGMENT`,\r\n  [256]: `UNKEYED_FRAGMENT`,\r\n  [512]: `NEED_PATCH`,\r\n  [1024]: `DYNAMIC_SLOTS`,\r\n  [2048]: `DEV_ROOT_FRAGMENT`,\r\n  [-1]: `HOISTED`,\r\n  [-2]: `BAIL`,\r\n};\r\n", "export const regSpaces = /^[ \\t\\r\\n]+/; // \u5339\u914D\u7A7A\u683C\r\n\r\nexport const regTag = /^<\\/?([a-z][^ \\t\\r\\n/>]*)/; // \u5339\u914D\u6807\u7B7E\r\n\r\nexport const regAttr = /^[^\\t\\r\\n\\f />][^\\t\\r\\n\\f />=]*/; // \u5339\u914D\u5C5E\u6027\u540D\r\n\r\nexport const regSpaceEqual = /^[\\t\\r\\n\\f ]*=/; // \u5339\u914D\u7A7A\u683C =\r\n\r\nexport const regSpaceChar = /[^\\t\\r\\n\\f ]/; // \u5339\u914D\u7A7A\u767D\u5B57\u7B26\r\n", "import { NodeTypes } from \"./ast\";\r\nimport {\r\n  regTag,\r\n  regSpaces,\r\n  regAttr,\r\n  regSpaceEqual,\r\n  regSpaceChar,\r\n} from \"@mw/shared\";\r\n\r\nfunction parse(template) {\r\n  const context = createParserContext(template);\r\n  return createRoot(parseChildren(context));\r\n}\r\n\r\nfunction createRoot(children) {\r\n  return {\r\n    type: NodeTypes.ROOT,\r\n    children,\r\n  };\r\n}\r\n\r\nfunction createParserContext(content) {\r\n  return {\r\n    originalSource: content,\r\n    source: content,\r\n    line: 1,\r\n    column: 1,\r\n    offset: 0,\r\n  };\r\n}\r\n\r\nfunction isEnd(context) {\r\n  const s = context.source;\r\n  if (s.startsWith(\"</\")) {\r\n    return true;\r\n  }\r\n  return !s;\r\n}\r\nfunction parseChildren(context) {\r\n  let nodes = [] as any;\r\n  // \u6709\u5185\u5BB9\u7EE7\u7EED\u5FAA\u73AF\r\n  while (!isEnd(context)) {\r\n    let node;\r\n    const c = context.source;\r\n    if (c.startsWith(\"{{\")) {\r\n      node = parseExpression(context);\r\n    } else if (c[0] === \"<\") {\r\n      node = parseElement(context);\r\n    } else {\r\n      node = parseText(context);\r\n    }\r\n    nodes.push(node);\r\n  }\r\n  // \u53BB\u9664\u7A7A\u8282\u70B9\r\n\r\n  for (let i = 0; i < nodes.length; i++) {\r\n    let node = nodes[i];\r\n    if (node.type === NodeTypes.TEXT) {\r\n      if (!regSpaceChar.test(node.content)) {\r\n        nodes[i] = null;\r\n      } else {\r\n        node.content = node.content.replace(/[ \\t\\r\\n]+/g, \" \");\r\n      }\r\n    }\r\n  }\r\n  return nodes.filter((node) => !!node);\r\n}\r\n\r\n// \u89E3\u6790\u5143\u7D20\r\nfunction parseElement(context) {\r\n  const ele = parseTag(context);\r\n  // \u5F00\u59CB\u6807\u7B7E\u9012\u5F52 <div>\r\n  // \u6389\u8FC7\u7ED3\u675F\u6807\u7B7E </div>\r\n  const children = parseChildren(context);\r\n  if (context.source.startsWith(\"</\")) {\r\n    parseTag(context);\r\n  }\r\n\r\n  (ele as any).children = children;\r\n  (ele as any).loc = getSelection(context, ele.loc.start);\r\n\r\n  return ele;\r\n}\r\n\r\nfunction parseTag(context) {\r\n  const start = getCursor(context);\r\n  const match = regTag.exec(context.source);\r\n  const tag = match[1];\r\n  advanceBy(context, match[0].length);\r\n  advanceBySpaces(context);\r\n  let props = parseAttrs(context);\r\n\r\n  const isSelfClosing = context.source.startsWith(\"/>\");\r\n  advanceBy(context, isSelfClosing ? 2 : 1);\r\n\r\n  return {\r\n    type: NodeTypes.ELEMENT,\r\n    tag,\r\n    props,\r\n    isSelfClosing,\r\n    loc: getSelection(context, start),\r\n  };\r\n}\r\n\r\nfunction parseAttrs(context) {\r\n  let props = [];\r\n\r\n  while (context.source.length > 0 && !context.source.startsWith(\">\")) {\r\n    // \u89E3\u6790\u5C5E\u6027\r\n    const prop = parseAttr(context);\r\n    props.push(prop);\r\n    advanceBySpaces(context);\r\n  }\r\n\r\n  return props;\r\n}\r\n\r\n// \u89E3\u6790\u5C5E\u6027\u503C\r\nfunction parseAttrValue(context) {\r\n  let value;\r\n  let quote = context.source[0];\r\n\r\n  let isQuoted = quote === \"'\" || quote === '\"';\r\n  if (isQuoted) {\r\n    advanceBy(context, 1);\r\n    const endQuoteIndex = context.source.indexOf(quote, 1);\r\n    value = parseTextData(context, endQuoteIndex);\r\n    advanceBy(context, 1);\r\n  } else {\r\n    // \u5C06>\u4E5F\u53BB\u9664\r\n    value = context.source.match(/([^ \\t\\r\\n/>])+/)[1];\r\n    advanceBy(context, value.length);\r\n    advanceBySpaces(context);\r\n  }\r\n\r\n  return value;\r\n}\r\n\r\n// \u89E3\u6790\u5C5E\u6027\r\nfunction parseAttr(context) {\r\n  const start = getCursor(context);\r\n  let match = regAttr.exec(context.source);\r\n  let name = match[0];\r\n  let value;\r\n  advanceBy(context, name.length);\r\n\r\n  if (regSpaceEqual.test(context.source)) {\r\n    advanceBySpaces(context);\r\n    advanceBy(context, 1);\r\n    advanceBySpaces(context);\r\n\r\n    value = parseAttrValue(context);\r\n  }\r\n\r\n  let valueLoc = getSelection(context, start);\r\n\r\n  return {\r\n    type: NodeTypes.ATTRIBUTE,\r\n    name: name,\r\n    value: {\r\n      type: NodeTypes.TEXT,\r\n      content: value,\r\n      loc: valueLoc,\r\n    },\r\n    loc: getSelection(context, start),\r\n  };\r\n}\r\n\r\n// \u89E3\u6790\u8868\u8FBE\u5F0F  {{ name }}\r\nfunction parseExpression(context) {\r\n  const start = getCursor(context);\r\n  // \u7ED3\u675F}}\u7684\u4E0B\u6807\uFF0C\u8DF3\u8FC7\u5F00\u59CB{{\r\n  const closeIndex = context.source.indexOf(\"}}\", \"{{\".length);\r\n  // \u5220\u9664 {{\r\n  advanceBy(context, 2);\r\n\r\n  const innerStart = getCursor(context);\r\n  const innerEnd = getCursor(context);\r\n  // \u83B7\u53D6content\r\n  const contentLength = closeIndex - \"{{\".length;\r\n  // \u5305\u542B\u7A7A\u683C\u7684\u5185\u5BB9\r\n  const preContent = parseTextData(context, contentLength);\r\n  const content = preContent.trim();\r\n  const startOffset = preContent.indexOf(content);\r\n\r\n  if (startOffset > 0) {\r\n    // \u5B9A\u4F4D\u524D\u9762\u7A7A\u683C\u7684\u4F4D\u7F6E\r\n    advancePositionWithMutation(innerStart, preContent, startOffset);\r\n  }\r\n  const endOffset = startOffset + content.length;\r\n  advancePositionWithMutation(innerEnd, preContent, endOffset);\r\n  advanceBy(context, 2);\r\n  return {\r\n    type: NodeTypes.INTERPOLATION,\r\n    content: {\r\n      type: NodeTypes.SIMPLE_EXPRESSION,\r\n      content,\r\n      loc: getSelection(context, innerStart, innerEnd),\r\n    },\r\n    loc: getSelection(context, start),\r\n  };\r\n}\r\n\r\n// \u89E3\u6790\u6587\u672C\r\nfunction parseText(context) {\r\n  const tokens = [\"<\", \"{{\"];\r\n\r\n  let endIndex = context.source.length;\r\n\r\n  for (let i = 0; i < tokens.length; i++) {\r\n    const index = context.source.indexOf(tokens[i]);\r\n    if (index !== -1 && index < endIndex) {\r\n      endIndex = index;\r\n    }\r\n  }\r\n  // \u627E\u5230\u6587\u672C\u7ED3\u675F\u6700\u8FD1\u7684\u7D22\u5F15\r\n  const content = parseTextData(context, endIndex);\r\n\r\n  return {\r\n    type: NodeTypes.TEXT,\r\n    content,\r\n  };\r\n}\r\n\r\n// \u622A\u53D6\u6587\u672C\r\nfunction parseTextData(context, endIndex) {\r\n  const content = context.source.slice(0, endIndex);\r\n  advanceBy(context, endIndex);\r\n\r\n  return content;\r\n}\r\n\r\nfunction advanceBySpaces(context) {\r\n  const match = regSpaces.exec(context.source);\r\n  if (match) {\r\n    advanceBy(context, match[0].length);\r\n  }\r\n}\r\nfunction advanceBy(context, endIndex) {\r\n  let s = context.source;\r\n  advancePositionWithMutation(context, s, endIndex);\r\n  context.source = s.slice(endIndex);\r\n}\r\n\r\nfunction advancePositionWithMutation(context, source, endIndex) {\r\n  let linesCount = 0;\r\n  let linePos = -1;\r\n  for (let i = 0; i < endIndex; i++) {\r\n    // \u6362\u884C\r\n\r\n    if (source.charCodeAt(i) === 10) {\r\n      linesCount++;\r\n      linePos = i;\r\n    }\r\n  }\r\n  context.line += linesCount;\r\n  context.column =\r\n    linePos === -1 ? context.column + endIndex : endIndex - linePos;\r\n  context.offset += endIndex;\r\n}\r\n\r\nfunction getSelection(context, start, nextEnd?) {\r\n  let end = nextEnd || getCursor(context);\r\n  // eslint \u53EF\u4EE5\u6839\u636E start\uFF0Cend\u627E\u5230\u8981\u62A5\u9519\u7684\u4F4D\u7F6E\r\n  return {\r\n    start,\r\n    end,\r\n    source: context.originalSource.slice(start.offset, end.offset),\r\n  };\r\n}\r\n\r\nfunction getCursor(context) {\r\n  let { line, column, offset } = context;\r\n  return { line, column, offset };\r\n}\r\n\r\nexport { parse };\r\n", "import { PatchFlags } from \"@mw/shared\";\r\nimport {\r\n  NodeTypes,\r\n  createCallExpression,\r\n  createObjExpression,\r\n  createVnodeCall,\r\n} from \"./ast\";\r\nimport {\r\n  CREATE_ELEMENT_BLOCK,\r\n  CREATE_ELEMENT_VNODE,\r\n  CREATE_TEXT_VNODE,\r\n  OPEN_BLOCK,\r\n  TO_DISPLAY_STRING,\r\n  Fragment,\r\n} from \"./runtimeHelper\";\r\n\r\nexport function transform(ast) {\r\n  const context = createTransformContext(ast);\r\n  // \u6839\u8282\u70B9\u60C5\u51B5\r\n  // 1.\u6587\u672C 2.\u4E00\u4E2A\u5143\u7D20createElementVnode - createElmentBlock 3.\u591A\u4E2A\u5143\u7D20  \u521B\u5EFAFragment\r\n\r\n  traverseNode(ast, context);\r\n\r\n  createRootCodegenNode(ast, context);\r\n\r\n  ast.helpers = [...context.helpers.keys()];\r\n}\r\n\r\nfunction createRootCodegenNode(ast, context) {\r\n  const { children } = ast;\r\n\r\n  if (children.length === 1) {\r\n    const child = children[0];\r\n\r\n    if (NodeTypes.ELEMENT === child.type) {\r\n      ast.codegenNode = child.codegenNode;\r\n      context.removeHelper(CREATE_ELEMENT_VNODE);\r\n      context.helper(CREATE_ELEMENT_BLOCK);\r\n      context.helper(OPEN_BLOCK);\r\n      ast.codegenNode.isBlock = true;\r\n    } else {\r\n      ast.codegenNode = child;\r\n    }\r\n  } else if (children.length > 0) {\r\n    ast.codegenNode = createVnodeCall(\r\n      context,\r\n      context.helper(Fragment),\r\n      null,\r\n      children\r\n    );\r\n    context.helper(CREATE_ELEMENT_BLOCK);\r\n    context.helper(OPEN_BLOCK);\r\n    ast.codegenNode.isBlock = true;\r\n  }\r\n}\r\n\r\nfunction traverseNode(node, context) {\r\n  context.currentNode = node;\r\n  let exits = []; // \u5904\u7406\u5B8C\u5143\u7D20\u672C\u6587\uFF0C\u53EF\u80FD\u5012\u5E8F\u6267\u884C\uFF0C\u56DE\u6EAF\r\n\r\n  const transforms = context.transformNode;\r\n\r\n  for (let i = 0; i < transforms.length; i++) {\r\n    const transfrom = transforms[i];\r\n    let exit = transfrom(node, context);\r\n\r\n    exit && exits.push(exit);\r\n  }\r\n\r\n  switch (node.type) {\r\n    case NodeTypes.ROOT:\r\n    // traverseChildren(node, context);\r\n    // break;\r\n    case NodeTypes.ELEMENT:\r\n      for (let i = 0; i < node.children.length; i++) {\r\n        context.parent = node;\r\n        traverseNode(node.children[i], context);\r\n      }\r\n      break;\r\n    // case NodeTypes.TEXT:\r\n    //   // traverseChildren(node, context);\r\n    //   break;\r\n\r\n    case NodeTypes.INTERPOLATION:\r\n      context.helper(TO_DISPLAY_STRING);\r\n      break;\r\n  }\r\n\r\n  context.currentNode = node; // \u8FD8\u539F\u5F53\u524D\u8282\u70B9\r\n\r\n  let tail = exits.length;\r\n  if (tail > 0) {\r\n    while (tail--) {\r\n      exits[tail]();\r\n    }\r\n  }\r\n}\r\n\r\n// \u521B\u5EFA\u6A21\u7248\u8F6C\u5316\u4E0A\u4E0B\u6587\r\nfunction createTransformContext(root) {\r\n  const context = {\r\n    root,\r\n    currentNode: root,\r\n    parent: null,\r\n    helpers: new Map(),\r\n    transformNode: [transformElement, transformText, transformExpression],\r\n\r\n    helper(key) {\r\n      let num = context.helpers.get(key) || 0;\r\n      context.helpers.set(key, num + 1);\r\n\r\n      return num;\r\n    },\r\n    removeHelper(key) {\r\n      let num = context.helpers.get(key);\r\n      if (num > 1) {\r\n        context.helpers.set(key, num - 1);\r\n      } else {\r\n        context.helpers.delete(key);\r\n      }\r\n    },\r\n  };\r\n\r\n  return context;\r\n}\r\n\r\nfunction transformElement(node, context) {\r\n  if (NodeTypes.ELEMENT === node.type) {\r\n    return function () {\r\n      //createVnodeCall\r\n      const { tag, props, children } = node;\r\n\r\n      const vnodeTag = tag;\r\n      let properties = [];\r\n\r\n      for (let i = 0; i < props.length; i++) {\r\n        const prop = props[i];\r\n        properties.push({ key: prop.name, value: prop.value.content });\r\n      }\r\n\r\n      const propsExpression =\r\n        properties.length > 0 ? createObjExpression(context) : null;\r\n\r\n      let vnodeChildren = null;\r\n      if (children.length === 1) {\r\n        vnodeChildren = children[0];\r\n      } else if (children.length > 1) {\r\n        vnodeChildren = children;\r\n      }\r\n\r\n      node.codegenNode = createVnodeCall(\r\n        context,\r\n        vnodeTag,\r\n        propsExpression,\r\n        vnodeChildren\r\n      );\r\n    };\r\n  }\r\n}\r\n\r\nfunction transformText(node, context) {\r\n  if (NodeTypes.ELEMENT === node.type || NodeTypes.ROOT === node.type) {\r\n    return function () {\r\n      let hasText = false;\r\n      let container = null;\r\n\r\n      const children = node.children;\r\n\r\n      for (let i = 0; i < children.length; i++) {\r\n        const child = children[i];\r\n\r\n        if (isText(child)) {\r\n          hasText = true;\r\n\r\n          for (let j = i + 1; j < children.length; j++) {\r\n            const next = children[j];\r\n            if (isText(next)) {\r\n              if (!container) {\r\n                container = children[i] = {\r\n                  type: NodeTypes.COMPOUND_EXPRESSION,\r\n                  children: [child],\r\n                };\r\n              }\r\n\r\n              container.children.push(\" + \", child);\r\n              children.splice(j, 1);\r\n              j--;\r\n            } else {\r\n              container = null;\r\n              break;\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n      if (!hasText || children.length === 1) {\r\n        return;\r\n      }\r\n\r\n      for (let i = 0; i < children.length; i++) {\r\n        let args = [];\r\n\r\n        const child = children[i];\r\n        if (isText(child) || child.type === NodeTypes.COMPOUND_EXPRESSION) {\r\n          args.push(child);\r\n          if (child.type !== NodeTypes.TEXT) {\r\n            args.push(PatchFlags.TEXT);\r\n          }\r\n        }\r\n\r\n        children[i] = {\r\n          type: NodeTypes.TEXT_CALL,\r\n          content: child,\r\n          codegenNode: createCallExpression(context, args),\r\n        };\r\n      }\r\n    };\r\n  }\r\n}\r\n\r\nfunction isText(node) {\r\n  return node.type === NodeTypes.TEXT || node.type === NodeTypes.INTERPOLATION;\r\n}\r\n\r\nfunction transformExpression(node, context) {\r\n  if (NodeTypes.INTERPOLATION === node.type) {\r\n    node.content.content = `_ctx.${node.content.content}`;\r\n  }\r\n}\r\n", "import { NodeTypes } from \"./ast\";\r\nimport { parse } from \"./parse\";\r\nimport {\r\n  CREATE_ELEMENT_BLOCK,\r\n  CREATE_ELEMENT_VNODE,\r\n  helperMapName,\r\n  OPEN_BLOCK,\r\n  TO_DISPLAY_STRING,\r\n} from \"./runtimeHelper\";\r\n\r\nimport { transform } from \"./transform\";\r\n\r\nexport function compile(template) {\r\n  const ast = parse(template);\r\n\r\n  transform(ast);\r\n\r\n  return generate(ast);\r\n}\r\n\r\nfunction generate(ast) {\r\n  const context = createCodegenContext(ast);\r\n  const { push, indent, deindent, newLine } = context;\r\n\r\n  genFunction(ast, context);\r\n  console.log(context.code);\r\n\r\n  indent();\r\n  push(`return `);\r\n\r\n  if (ast.codegenNode) {\r\n    // \u6839\u636E\u7C7B\u578B\u751F\u6210\u4EE3\u7801\r\n    genNode(ast.codegenNode, context);\r\n  } else {\r\n    push(\" null\");\r\n  }\r\n\r\n  deindent();\r\n  push(`}`);\r\n  return context.code;\r\n}\r\n\r\nfunction genNode(node, context) {\r\n  const { push, indent, deindent, newLine } = context;\r\n\r\n  switch (node.type) {\r\n    case NodeTypes.TEXT:\r\n      genText(node, context);\r\n      break;\r\n    // case NodeTypes.INTERPOLATION:\r\n    // genComment(node, context);\r\n    // break;\r\n    case NodeTypes.INTERPOLATION:\r\n      genInterpolation(node, context);\r\n      break;\r\n    case NodeTypes.SIMPLE_EXPRESSION:\r\n      genExpression(node, context);\r\n\r\n    case NodeTypes.VNODE_CALL:\r\n      genVnodeCall(node, context);\r\n      break;\r\n  }\r\n}\r\n\r\nfunction genText(node, context) {\r\n  context.push(JSON.stringify(node.content));\r\n}\r\n\r\nfunction genVnodeCall(node, context) {\r\n  const { push, indent, deindent, newLine, helper } = context;\r\n  const { tag, props, children, isBlock } = node;\r\n\r\n  if (isBlock) {\r\n    push(`(${helper(OPEN_BLOCK)}(),`);\r\n  }\r\n\r\n  const help = isBlock\r\n    ? helper(CREATE_ELEMENT_BLOCK)\r\n    : helper(CREATE_ELEMENT_VNODE);\r\n  push(`${help}(`);\r\n  if (isBlock) {\r\n    push(`)`);\r\n  }\r\n\r\n  push(`)`);\r\n}\r\n\r\nfunction genExpression(node, context) {\r\n  context.push(node.content);\r\n}\r\nfunction genInterpolation(node, context) {\r\n  const { push, indent, deindent, newLine, helper } = context;\r\n\r\n  push(`${helper(TO_DISPLAY_STRING)}(`);\r\n\r\n  genNode(node.content, context);\r\n  push(`)`);\r\n}\r\nfunction genFunction(ast, context) {\r\n  const { push, indent, deindent, newLine } = context;\r\n\r\n  if (ast.helpers.length > 0) {\r\n    push(\r\n      `const {${ast.helpers.map(\r\n        (key) => `${helperMapName[key]}:${context.helper(key)}`\r\n      )}} = mwVue`\r\n    );\r\n  }\r\n\r\n  newLine();\r\n\r\n  push(`return function render(_ctx) {`);\r\n}\r\n\r\nfunction createCodegenContext(ast) {\r\n  const context = {\r\n    code: \"\",\r\n    level: 0,\r\n    push(source) {\r\n      context.code += source;\r\n    },\r\n    helper(key) {\r\n      return `_${helperMapName[key]}`;\r\n    },\r\n    indent() {\r\n      newLine(++context.level);\r\n    },\r\n    deindent(noLine = false) {\r\n      if (noLine) {\r\n        --context.level;\r\n      } else {\r\n        newLine(--context.level);\r\n      }\r\n    },\r\n    newLine() {\r\n      newLine(context.level);\r\n    },\r\n  };\r\n\r\n  function newLine(l) {\r\n    context.push(`\\n${\"  \".repeat(l)}`);\r\n  }\r\n\r\n  return context;\r\n}\r\n"],
  "mappings": "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",
  "names": []
}
